{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/jared/PortfolioProjects/BookwormSE/Develop/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\r\n * No undefined variables\r\n *\r\n * A GraphQL operation is only valid if all variables encountered, both directly\r\n * and via fragment spreads, are defined by that operation.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\r\n */\nexport function NoUndefinedVariablesRule(context) {\n  var variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n        var _iterator = _createForOfIteratorHelper(usages),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var node = _step.value.node;\n            var varName = node.name.value;\n            if (variableNameDefined[varName] !== true) {\n              context.reportError(new GraphQLError(operation.name ? \"Variable \\\"$\".concat(varName, \"\\\" is not defined by operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(varName, \"\\\" is not defined.\"), {\n                nodes: [node, operation]\n              }));\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","NoUndefinedVariablesRule","context","variableNameDefined","Object","create","OperationDefinition","enter","leave","operation","usages","getRecursiveVariableUsages","_iterator","_createForOfIteratorHelper","_step","s","n","done","node","value","varName","name","reportError","concat","nodes","err","e","f","VariableDefinition","variable"],"sources":["C:/Users/jared/PortfolioProjects/BookwormSE/Develop/client/node_modules/graphql/validation/rules/NoUndefinedVariablesRule.mjs"],"sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\r\n\r\n/**\r\n * No undefined variables\r\n *\r\n * A GraphQL operation is only valid if all variables encountered, both directly\r\n * and via fragment spreads, are defined by that operation.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\r\n */\r\nexport function NoUndefinedVariablesRule(context) {\r\n  let variableNameDefined = Object.create(null);\r\n  return {\r\n    OperationDefinition: {\r\n      enter() {\r\n        variableNameDefined = Object.create(null);\r\n      },\r\n\r\n      leave(operation) {\r\n        const usages = context.getRecursiveVariableUsages(operation);\r\n\r\n        for (const { node } of usages) {\r\n          const varName = node.name.value;\r\n\r\n          if (variableNameDefined[varName] !== true) {\r\n            context.reportError(\r\n              new GraphQLError(\r\n                operation.name\r\n                  ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".`\r\n                  : `Variable \"$${varName}\" is not defined.`,\r\n                {\r\n                  nodes: [node, operation],\r\n                },\r\n              ),\r\n            );\r\n          }\r\n        }\r\n      },\r\n    },\r\n\r\n    VariableDefinition(node) {\r\n      variableNameDefined[node.variable.name.value] = true;\r\n    },\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,8BAA8B;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,wBAAwBA,CAACC,OAAO,EAAE;EAChD,IAAIC,mBAAmB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAC7C,OAAO;IACLC,mBAAmB,EAAE;MACnBC,KAAK,WAAAA,MAAA,EAAG;QACNJ,mBAAmB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MAC3C,CAAC;MAEDG,KAAK,WAAAA,MAACC,SAAS,EAAE;QACf,IAAMC,MAAM,GAAGR,OAAO,CAACS,0BAA0B,CAACF,SAAS,CAAC;QAAC,IAAAG,SAAA,GAAAC,0BAAA,CAEtCH,MAAM;UAAAI,KAAA;QAAA;UAA7B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA+B;YAAA,IAAlBC,IAAI,GAAAJ,KAAA,CAAAK,KAAA,CAAJD,IAAI;YACf,IAAME,OAAO,GAAGF,IAAI,CAACG,IAAI,CAACF,KAAK;YAE/B,IAAIhB,mBAAmB,CAACiB,OAAO,CAAC,KAAK,IAAI,EAAE;cACzClB,OAAO,CAACoB,WAAW,CACjB,IAAItB,YAAY,CACdS,SAAS,CAACY,IAAI,kBAAAE,MAAA,CACIH,OAAO,uCAAAG,MAAA,CAAkCd,SAAS,CAACY,IAAI,CAACF,KAAK,0BAAAI,MAAA,CAC7DH,OAAO,uBAAmB,EAC5C;gBACEI,KAAK,EAAE,CAACN,IAAI,EAAET,SAAS;cACzB,CACF,CACF,CAAC;YACH;UACF;QAAC,SAAAgB,GAAA;UAAAb,SAAA,CAAAc,CAAA,CAAAD,GAAA;QAAA;UAAAb,SAAA,CAAAe,CAAA;QAAA;MACH;IACF,CAAC;IAEDC,kBAAkB,WAAAA,mBAACV,IAAI,EAAE;MACvBf,mBAAmB,CAACe,IAAI,CAACW,QAAQ,CAACR,IAAI,CAACF,KAAK,CAAC,GAAG,IAAI;IACtD;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}