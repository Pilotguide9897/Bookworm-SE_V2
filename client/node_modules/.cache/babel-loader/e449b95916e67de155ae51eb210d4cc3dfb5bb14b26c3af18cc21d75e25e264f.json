{"ast":null,"code":"// see SignupForm.js for comments\nimport React,{useState}from'react';import{Form,Button,Alert}from'react-bootstrap';import{useMutation}from'@apollo/client';import{LOGIN_USER}from'../utils/mutations';import Auth from'../utils/auth';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const LoginForm=()=>{const[userFormData,setUserFormData]=useState({email:'',password:''});const[validated]=useState(false);const[showAlert,setShowAlert]=useState(false);const[loginUser,{error}]=useMutation(LOGIN_USER);const handleInputChange=event=>{const{name,value}=event.target;setUserFormData({...userFormData,[name]:value});};const handleFormSubmit=async event=>{event.preventDefault();// check if form has everything (as per react-bootstrap docs)\nconst form=event.currentTarget;if(form.checkValidity()===false){event.preventDefault();event.stopPropagation();}try{console.log(`userFormData.email: ${userFormData.email}`);console.log(`userFormData.password: ${userFormData.password}`);const{data}=await loginUser({variables:{email:userFormData.email,password:userFormData.password}});if(error){console.error(error);throw new Error('something went wrong logging in!');}const{token,user}=data.login;console.log(user);console.log(token);Auth.login(token);}catch(err){console.error(`Error with logging in:`,err);setShowAlert(true);}setUserFormData({username:'',email:'',password:''});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Form,{noValidate:true,validated:validated,onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsx(Alert,{dismissible:true,onClose:()=>setShowAlert(false),show:showAlert,variant:\"danger\",children:\"Something went wrong with your login credentials!\"}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Your email\",name:\"email\",onChange:handleInputChange,value:userFormData.email,required:true}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"Email is required!\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Your password\",name:\"password\",onChange:handleInputChange,value:userFormData.password,required:true}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"Password is required!\"})]}),/*#__PURE__*/_jsx(Button,{disabled:!(userFormData.email&&userFormData.password),type:\"submit\",variant:\"success\",children:\"Submit\"})]})});};export default LoginForm;","map":{"version":3,"names":["React","useState","Form","Button","Alert","useMutation","LOGIN_USER","Auth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LoginForm","userFormData","setUserFormData","email","password","validated","showAlert","setShowAlert","loginUser","error","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","console","log","data","variables","Error","token","user","login","err","username","children","noValidate","onSubmit","dismissible","onClose","show","variant","Group","className","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","disabled"],"sources":["C:/Users/jared/PortfolioProjects/BookwormSE/Develop/client/src/components/LoginForm.js"],"sourcesContent":["// see SignupForm.js for comments\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      console.log(`userFormData.email: ${userFormData.email}`);\r\n      console.log(`userFormData.password: ${userFormData.password}`);\r\n      const { data } = await loginUser({\r\n        variables: {\r\n          email: userFormData.email,\r\n          password: userFormData.password,\r\n        }\r\n      });\r\n\r\n      if (error) {\r\n        console.error(error);\r\n        throw new Error('something went wrong logging in!');\r\n      }\r\n\r\n      const { token, user } = data.login\r\n      console.log(user);\r\n      console.log(token);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(`Error with logging in:`, err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group className='mb-3'>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='mb-3'>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}